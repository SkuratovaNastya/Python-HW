# Написать калькулятор для вычисления дискриминанта. На вход подаются коэффициенты квадратного уравнения, выход - значение дискриминанта.
print("Введите коэффициенты для уравнения")
print("ax^2 + bx + c = 0:")
a = float(input("a = "))
b = float(input("b = "))
c = float(input("c = "))
discr = b ** 2 - 4 * a * c
print("Дискриминант D = %.2f" % discr)

# По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, в порядке возрастания.

N = int(input())
i = 1
while i ** 2 <= N:
    print(i ** 2)
    i += 1

# Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.

n = int(input())
i = 1
while i <= n:
    i += 1
    if n % i == 0:
        print(i)
        break

# Последовательность Фибоначчи определяется так:
# f_0 = 0,  f_1 = 1,  f_n = f_{n−1} + f_{n−2}
# По данному числу n определите n-е число Фибоначчи f_n.

fib1 = 0
fib2 = 1
n = int(input("Номер элемента ряда Фибоначчи: "))
for i in range(n - 1):
    fib_sum = fib1 + fib2
    fib1 = fib2
    fib2 = fib_sum
print(fib2)

# Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...)

a = input().split()
for i in range(0, len(a), 2):
    print(a[i])

# Выведите все четные элементы списка. При этом используйте цикл for, перебирающий элементы списка, а не их индексы!

s = input()
a = [int(s) for s in s.split()]
for i in a:
    if int(i) % 2 == 0:
        print(i, end=' ')

# Дан список чисел. Если в нем есть два соседних элемента одного знака, выведите эти числа. Если соседних элементов одного знака нет —
# не выводите ничего. Если таких пар соседей несколько — выведите первую пару.

a = [int(i) for i in input().split()]
for i in range(1, len(a)):
    if a[i - 1] * a[i] > 0:
        print(a[i - 1], a[i])
        break

# Последовательность состоит из натуральных чисел и завершается числом 0. Определите,
# сколько элементов этой последовательности больше предыдущего элемента.

prev = int(input())
answer = 0
while prev != 0:
    next = int(input())
    if next != 0 and prev < next:
        answer += 1
    prev = next
print(answer)

# Дан список чисел. Определите, сколько в этом списке элементов, которые больше двух своих соседей, и выведите количество таких элементов.
# Крайние элементы списка никогда не учитываются, поскольку у них недостаточно соседей.

a = [int(i) for i in input().split()]
counter = 0
for i in range(1, len(a) - 1):
    if a[i - 1] < a[i] > a[i + 1]:
        counter += 1
print(counter)

# Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это сделать.
# Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого человека в строю.
# После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200. Выведите номер, под которым
# Петя должен встать в строй. Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них.

a = [int(i) for i in input().split()]
x = int(input())
pos = 0
while pos < len(a) and a[pos] >= x:
    pos += 1
print(pos + 1)

# Дан список, упорядоченный по неубыванию элементов в нем. Определите, сколько в нем различных элементов.

a = [int(i) for i in input().split()]
num_distinct = 1
for i in range(0, len(a) - 1):
    if a[i] != a[i + 1]:
        num_distinct += 1
print(num_distinct)

# Дан список чисел. Выведите значение наибольшего элемента в списке, а затем индекс этого элемента в списке.
# Если наибольших элементов несколько, выведите индекс первого из них.

index_of_max = 0
a = [int(i) for i in input().split()]
for i in range(1, len(a)):
    if a[i] > a[index_of_max]:
        index_of_max = i
print(a[index_of_max], index_of_max)

# Последовательность состоит из натуральных чисел и завершается числом 0.
# Определите, сколько элементов этой последовательности равны ее наибольшему элементу.

maximum = 0
num_maximal = 0
element = -1
while element != 0:
    element = int(input())
    if element > maximum:
        maximum, num_maximal = element, 1
    elif element == maximum:
        num_maximal += 1
print(num_maximal)

# Дана последовательность натуральных чисел, завершающаяся числом 0. Определите,
# какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.

prev = -1
curr_rep_len = 0
max_rep_len = 0
element = int(input())
while element != 0:
    if prev == element:
        curr_rep_len += 1
    else:
        prev = element
        max_rep_len = max(max_rep_len, curr_rep_len)
        curr_rep_len = 1
    element = int(input())
max_rep_len = max(max_rep_len, curr_rep_len)
print(max_rep_len)  # 0 также считаем элементом последовательности

# Даны два списка с числами, получить третий путем поэлементного сложения первых двух.

print('Введите количество элементов списков')
n = int(input())
A = [int(i) for i in input().split()]
B = [int(i) for i in input().split()]
C = [(A[i] + B[i]) for i in range(n)]
print(C)

# Даны два вектора (списка), вычислить скалярное произведение

print('Рассмотрим два вектора в трёхмерном пространстве')
A = [0] * 3
B = [0] * 3
print('Введите сначала координаты первого вектора, потом - второго')
A[0] = int(input())
A[1] = int(input())
A[2] = int(input())
B[0] = int(input())
B[1] = int(input())
B[2] = int(input())
c = A[0] * B[0] + A[1] * B[1] + A[2] * B[2]
print(c)
