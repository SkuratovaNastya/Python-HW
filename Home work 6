#Написать функцию, которая вычисляет среднее арифметическое элементов массива, переданного ей в качестве аргумента
def arif(mas):
k = 0
for i in range(len(mas)):
k += mas[i]
return k/len(mas)

#Написать две функции, которые будут переводить из десятичной СС в двоичную и обратно.
def two(a):
i = 0
if a == 0:
A = 1
elif a > 0:
A = str(0)
while a >= 2**i:
i += 1
k = 0
for j in range(1, i + 1):
if 2**(i - j) + k <= a:
A += '1'
k += 2**(i - j)
else:
A += '0'
else:
A = str(1)
while -a >= 2 i:
i += 1
k = 0
for j in range(1, i + 1):
if 2 (i - j) + k <= -a:
A += '1'
k += 2 (i - j)
else:
A += '0'
return A
def ten(a):
b = str(a)
k = 0
if b[0] == '1':
A = '-'
else:
A = ''
for i in range(1, len(b)):
k += int(b[i]) * 2(len(b) - i - 1)
A += str(k)
return(A)

#Пользователь делает вклад в размере a рублей сроком на years лет под 10% годовых (каждый год размер его вклада увеличивается на 10%. 
Эти деньги прибавляются к сумме вклада, и на них в следующем году тоже будут проценты). Написать функцию bank, принимающая аргументы a 
и years, и возвращающую сумму, которая будет на счету пользователя.
def bank (a, years):
for i in range(years):
a += a/10
print(a)
return a

#Даны четыре действительных числа: x1, y1, x2, y2. Напишите функцию distance(x1, y1, x2, y2), вычисляющая расстояние между точкой (x1,y1) 
и (x2,y2). Считайте четыре действительных числа и выведите результат работы этой функции.
def lin(x1, y1, x2, y2):
return ((x1 - x2)**2 + (y1 - y2)**2)**(1/2)

#Дано действительное положительное число a и целоe число n. Вычислите a^n. Решение оформите в виде функции power(a, n). 
Стандартной функцией возведения в степень пользоваться нельзя. Учтитье, что n может быть отрицательным.
def power(a, n):
k = 1
if n >= 0:
for i in range(n):
k *= a
else:
for i in range(-n):
k /= a
return(k)

#Написать функцию is_prime, принимающую 1 аргумент — число от 0 до 1000, и возвращающую True, если оно простое, и False - иначе.
def is_prime(a):
for i in range(2, int(a**(1/2))):
if a % i == 0:
return False
return True

def two(a):
i = 0
if a == 0:
print(1)
elif a >= 1:
while a >= 2**i:
i += 1
A = str(1)
k = 2**(i-1)
for j in range(2, i + 1):
if 2**(i - j) + k <= a:
A += '1'
k += 2**(i - j)
else:
A += '0'
return A
def ten(a):
b = str(a)
k = 0
for i in range(len(b), 0, -1):
k += int(b[i - 1])*2**(i - 1)
return(k)
